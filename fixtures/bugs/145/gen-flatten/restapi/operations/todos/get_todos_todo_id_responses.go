// Code generated by go-swagger; DO NOT EDIT.

package todos

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/go-swagger/go-swagger/fixtures/bugs/145/gen-flatten/models"
)

// GetTodosTodoIDOKCode is the HTTP code returned for type GetTodosTodoIDOK
const GetTodosTodoIDOKCode int = 200

/*
GetTodosTodoIDOK get todos todo Id o k

swagger:response getTodosTodoIdOK
*/
type GetTodosTodoIDOK struct {

	/*
	  In: Body
	*/
	Payload *models.TodoFull `json:"body,omitempty"`
}

// NewGetTodosTodoIDOK creates GetTodosTodoIDOK with default headers values
func NewGetTodosTodoIDOK() *GetTodosTodoIDOK {

	return &GetTodosTodoIDOK{}
}

// WithPayload adds the payload to the get todos todo Id o k response
func (o *GetTodosTodoIDOK) WithPayload(payload *models.TodoFull) *GetTodosTodoIDOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get todos todo Id o k response
func (o *GetTodosTodoIDOK) SetPayload(payload *models.TodoFull) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetTodosTodoIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetTodosTodoIDNotFoundCode is the HTTP code returned for type GetTodosTodoIDNotFound
const GetTodosTodoIDNotFoundCode int = 404

/*
GetTodosTodoIDNotFound get todos todo Id not found

swagger:response getTodosTodoIdNotFound
*/
type GetTodosTodoIDNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewGetTodosTodoIDNotFound creates GetTodosTodoIDNotFound with default headers values
func NewGetTodosTodoIDNotFound() *GetTodosTodoIDNotFound {

	return &GetTodosTodoIDNotFound{}
}

// WithPayload adds the payload to the get todos todo Id not found response
func (o *GetTodosTodoIDNotFound) WithPayload(payload *models.ErrorResponse) *GetTodosTodoIDNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get todos todo Id not found response
func (o *GetTodosTodoIDNotFound) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetTodosTodoIDNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetTodosTodoIDInternalServerErrorCode is the HTTP code returned for type GetTodosTodoIDInternalServerError
const GetTodosTodoIDInternalServerErrorCode int = 500

/*
GetTodosTodoIDInternalServerError get todos todo Id internal server error

swagger:response getTodosTodoIdInternalServerError
*/
type GetTodosTodoIDInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewGetTodosTodoIDInternalServerError creates GetTodosTodoIDInternalServerError with default headers values
func NewGetTodosTodoIDInternalServerError() *GetTodosTodoIDInternalServerError {

	return &GetTodosTodoIDInternalServerError{}
}

// WithPayload adds the payload to the get todos todo Id internal server error response
func (o *GetTodosTodoIDInternalServerError) WithPayload(payload *models.ErrorResponse) *GetTodosTodoIDInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get todos todo Id internal server error response
func (o *GetTodosTodoIDInternalServerError) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetTodosTodoIDInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
