// Code generated by go-swagger; DO NOT EDIT.

package cli

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-swagger/go-swagger/fixtures/bugs/2969/codegen/models"
	"github.com/spf13/cobra"
)

// Schema cli for PromotionUsersResponse

// register flags to command
func registerModelPromotionUsersResponseFlags(depth int, cmdPrefix string, cmd *cobra.Command) error {

	if err := registerPromotionUsersResponsePropExecutable(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	if err := registerPromotionUsersResponsePropUserIds(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	return nil
}

func registerPromotionUsersResponsePropExecutable(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	executableDescription := `Required. Promotion ID`

	var executableFlagName string
	if cmdPrefix == "" {
		executableFlagName = "executable"
	} else {
		executableFlagName = fmt.Sprintf("%v.executable", cmdPrefix)
	}

	var executableFlagDefault string

	_ = cmd.PersistentFlags().String(executableFlagName, executableFlagDefault, executableDescription)

	return nil
}

func registerPromotionUsersResponsePropUserIds(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	// warning: userIds []string array type is not supported by go-swagger cli yet

	return nil
}

// retrieve flags from commands, and set value in model. Return true if any flag is passed by user to fill model field.
func retrieveModelPromotionUsersResponseFlags(depth int, m *models.PromotionUsersResponse, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	retAdded := false

	err, executableAdded := retrievePromotionUsersResponsePropExecutableFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || executableAdded

	err, userIdsAdded := retrievePromotionUsersResponsePropUserIdsFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || userIdsAdded

	return nil, retAdded
}

func retrievePromotionUsersResponsePropExecutableFlags(depth int, m *models.PromotionUsersResponse, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	executableFlagName := fmt.Sprintf("%v.executable", cmdPrefix)
	if cmd.Flags().Changed(executableFlagName) {

		var executableFlagName string
		if cmdPrefix == "" {
			executableFlagName = "executable"
		} else {
			executableFlagName = fmt.Sprintf("%v.executable", cmdPrefix)
		}

		executableFlagValue, err := cmd.Flags().GetString(executableFlagName)
		if err != nil {
			return err, false
		}
		m.Executable = &executableFlagValue

		retAdded = true
	}

	return nil, retAdded
}

func retrievePromotionUsersResponsePropUserIdsFlags(depth int, m *models.PromotionUsersResponse, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	userIdsFlagName := fmt.Sprintf("%v.userIds", cmdPrefix)
	if cmd.Flags().Changed(userIdsFlagName) {
		// warning: userIds array type []string is not supported by go-swagger cli yet
	}

	return nil, retAdded
}
