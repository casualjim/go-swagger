// Code generated by go-swagger; DO NOT EDIT.

package cli

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-swagger/go-swagger/fixtures/bugs/2969/codegen/models"
	"github.com/spf13/cobra"
)

// Schema cli for StepErrorHandler

// register flags to command
func registerModelStepErrorHandlerFlags(depth int, cmdPrefix string, cmd *cobra.Command) error {

	if err := registerStepErrorHandlerPropPlanIds(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	if err := registerStepErrorHandlerPropTaskIds(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	return nil
}

func registerStepErrorHandlerPropPlanIds(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	// warning: planIds []string array type is not supported by go-swagger cli yet

	return nil
}

func registerStepErrorHandlerPropTaskIds(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	// warning: taskIds []string array type is not supported by go-swagger cli yet

	return nil
}

// retrieve flags from commands, and set value in model. Return true if any flag is passed by user to fill model field.
func retrieveModelStepErrorHandlerFlags(depth int, m *models.StepErrorHandler, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	retAdded := false

	err, planIdsAdded := retrieveStepErrorHandlerPropPlanIdsFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || planIdsAdded

	err, taskIdsAdded := retrieveStepErrorHandlerPropTaskIdsFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || taskIdsAdded

	return nil, retAdded
}

func retrieveStepErrorHandlerPropPlanIdsFlags(depth int, m *models.StepErrorHandler, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	planIdsFlagName := fmt.Sprintf("%v.planIds", cmdPrefix)
	if cmd.Flags().Changed(planIdsFlagName) {
		// warning: planIds array type []string is not supported by go-swagger cli yet
	}

	return nil, retAdded
}

func retrieveStepErrorHandlerPropTaskIdsFlags(depth int, m *models.StepErrorHandler, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	taskIdsFlagName := fmt.Sprintf("%v.taskIds", cmdPrefix)
	if cmd.Flags().Changed(taskIdsFlagName) {
		// warning: taskIds array type []string is not supported by go-swagger cli yet
	}

	return nil, retAdded
}
