// Code generated by go-swagger; DO NOT EDIT.

package cli

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-swagger/go-swagger/fixtures/bugs/2969/codegen/models"
	"github.com/spf13/cobra"
)

// Schema cli for CreatePromotionRequest

// register flags to command
func registerModelCreatePromotionRequestFlags(depth int, cmdPrefix string, cmd *cobra.Command) error {

	if err := registerCreatePromotionRequestPropDescription(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	if err := registerCreatePromotionRequestPropSourceEnvironmentID(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	if err := registerCreatePromotionRequestPropTargetEnvironmentID(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	return nil
}

func registerCreatePromotionRequestPropDescription(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	descriptionDescription := `Promotion description`

	var descriptionFlagName string
	if cmdPrefix == "" {
		descriptionFlagName = "description"
	} else {
		descriptionFlagName = fmt.Sprintf("%v.description", cmdPrefix)
	}

	var descriptionFlagDefault string

	_ = cmd.PersistentFlags().String(descriptionFlagName, descriptionFlagDefault, descriptionDescription)

	return nil
}

func registerCreatePromotionRequestPropSourceEnvironmentID(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	sourceEnvironmentIdDescription := `Required. Source environment ID`

	var sourceEnvironmentIdFlagName string
	if cmdPrefix == "" {
		sourceEnvironmentIdFlagName = "sourceEnvironmentId"
	} else {
		sourceEnvironmentIdFlagName = fmt.Sprintf("%v.sourceEnvironmentId", cmdPrefix)
	}

	var sourceEnvironmentIdFlagDefault string

	_ = cmd.PersistentFlags().String(sourceEnvironmentIdFlagName, sourceEnvironmentIdFlagDefault, sourceEnvironmentIdDescription)

	return nil
}

func registerCreatePromotionRequestPropTargetEnvironmentID(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	targetEnvironmentIdDescription := `Required. Target environment ID`

	var targetEnvironmentIdFlagName string
	if cmdPrefix == "" {
		targetEnvironmentIdFlagName = "targetEnvironmentId"
	} else {
		targetEnvironmentIdFlagName = fmt.Sprintf("%v.targetEnvironmentId", cmdPrefix)
	}

	var targetEnvironmentIdFlagDefault string

	_ = cmd.PersistentFlags().String(targetEnvironmentIdFlagName, targetEnvironmentIdFlagDefault, targetEnvironmentIdDescription)

	return nil
}

// retrieve flags from commands, and set value in model. Return true if any flag is passed by user to fill model field.
func retrieveModelCreatePromotionRequestFlags(depth int, m *models.CreatePromotionRequest, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	retAdded := false

	err, descriptionAdded := retrieveCreatePromotionRequestPropDescriptionFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || descriptionAdded

	err, sourceEnvironmentIdAdded := retrieveCreatePromotionRequestPropSourceEnvironmentIDFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || sourceEnvironmentIdAdded

	err, targetEnvironmentIdAdded := retrieveCreatePromotionRequestPropTargetEnvironmentIDFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || targetEnvironmentIdAdded

	return nil, retAdded
}

func retrieveCreatePromotionRequestPropDescriptionFlags(depth int, m *models.CreatePromotionRequest, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	descriptionFlagName := fmt.Sprintf("%v.description", cmdPrefix)
	if cmd.Flags().Changed(descriptionFlagName) {

		var descriptionFlagName string
		if cmdPrefix == "" {
			descriptionFlagName = "description"
		} else {
			descriptionFlagName = fmt.Sprintf("%v.description", cmdPrefix)
		}

		descriptionFlagValue, err := cmd.Flags().GetString(descriptionFlagName)
		if err != nil {
			return err, false
		}
		m.Description = descriptionFlagValue

		retAdded = true
	}

	return nil, retAdded
}

func retrieveCreatePromotionRequestPropSourceEnvironmentIDFlags(depth int, m *models.CreatePromotionRequest, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	sourceEnvironmentIdFlagName := fmt.Sprintf("%v.sourceEnvironmentId", cmdPrefix)
	if cmd.Flags().Changed(sourceEnvironmentIdFlagName) {

		var sourceEnvironmentIdFlagName string
		if cmdPrefix == "" {
			sourceEnvironmentIdFlagName = "sourceEnvironmentId"
		} else {
			sourceEnvironmentIdFlagName = fmt.Sprintf("%v.sourceEnvironmentId", cmdPrefix)
		}

		sourceEnvironmentIdFlagValue, err := cmd.Flags().GetString(sourceEnvironmentIdFlagName)
		if err != nil {
			return err, false
		}
		m.SourceEnvironmentID = &sourceEnvironmentIdFlagValue

		retAdded = true
	}

	return nil, retAdded
}

func retrieveCreatePromotionRequestPropTargetEnvironmentIDFlags(depth int, m *models.CreatePromotionRequest, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	targetEnvironmentIdFlagName := fmt.Sprintf("%v.targetEnvironmentId", cmdPrefix)
	if cmd.Flags().Changed(targetEnvironmentIdFlagName) {

		var targetEnvironmentIdFlagName string
		if cmdPrefix == "" {
			targetEnvironmentIdFlagName = "targetEnvironmentId"
		} else {
			targetEnvironmentIdFlagName = fmt.Sprintf("%v.targetEnvironmentId", cmdPrefix)
		}

		targetEnvironmentIdFlagValue, err := cmd.Flags().GetString(targetEnvironmentIdFlagName)
		if err != nil {
			return err, false
		}
		m.TargetEnvironmentID = &targetEnvironmentIdFlagValue

		retAdded = true
	}

	return nil, retAdded
}
