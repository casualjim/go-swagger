// Code generated by go-bindata.
// sources:
// templates/client/parameter.gotmpl
// templates/model.gotmpl
// templates/modelvalidator.gotmpl
// templates/server/builder.gotmpl
// templates/server/configureapi.gotmpl
// templates/server/main.gotmpl
// templates/server/operation.gotmpl
// templates/server/parameter.gotmpl
// templates/structfield.gotmpl
// templates/validation/customformat.gotmpl
// templates/validation/primitive.gotmpl
// DO NOT EDIT!

package generator

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"strings"
	"os"
	"time"
	"io/ioutil"
	"path"
	"path/filepath"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name string
	size int64
	mode os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesClientParameterGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd4\x56\x4d\x6f\xe3\x36\x10\xbd\xeb\x57\x4c\x85\x2d\x60\x07\x59\xb9\xe7\x16\x29\xd0\x4d\xb3\xd8\xf4\x50\xa4\xdb\x60\x7b\x28\x8a\x82\x91\x46\x12\x1b\x8a\x54\x48\xca\xa9\x61\xf8\xbf\x77\x86\x94\x6c\x2b\x96\x51\x05\x05\x0a\xe4\x64\x8b\x9c\x8f\xf7\xe6\xcd\x90\xdc\x6e\xa1\xc0\x52\x6a\x84\xd4\x29\x99\xe3\xb3\x95\x1e\x6d\x0a\xbb\x5d\x92\xd0\x1e\xea\x82\xfe\xb6\x22\x7f\x14\x15\x02\x2d\x64\x77\xfd\x7f\x36\x58\xad\xe0\xbe\x96\x0e\x4a\xa9\x10\x9e\x85\x83\x0a\x35\x5a\xe1\xb1\x80\x87\x0d\xf8\x1a\xc1\x3d\x8b\xaa\x42\x0b\xde\x18\x95\xb1\xfd\x4d\x21\xbd\xd4\x15\x6d\x0e\x7e\x8d\xac\x6a\x0f\xad\x35\x6b\x84\xb2\xf3\x21\x54\x8d\x1a\x36\xa6\x03\x8b\xef\x6d\xa7\x47\x91\x86\x14\x90\x9b\xa6\x11\xba\x48\x12\xd9\xb4\xc6\x7a\x58\x24\xa9\x46\xbf\xaa\xbd\x6f\xd3\x24\xad\xa4\xaf\xbb\x87\x8c\x8c\x56\xb9\x70\x9d\x50\x7f\xc9\x66\x55\x99\xf7\x7d\x98\x60\xf6\x28\xfd\x0c\x4b\xfe\x9d\x61\x86\xd6\x1a\xeb\xe6\x67\x5e\xad\x85\x92\x05\x11\x99\xe1\x92\x2b\x89\x9a\xb0\xb2\x22\x56\x68\xaa\x7e\xf6\x23\x96\xa2\x53\xfe\x36\x70\x77\xa4\x06\x6d\xb5\x56\x6a\x5f\x42\xfa\xf5\x53\x0a\x19\xe9\xb3\xd7\xef\xe0\xf7\xee\x11\x37\x97\xf0\x8e\x72\x77\x08\xdf\x5e\x41\x36\x0a\xc0\xbb\xf4\x0f\x5e\xc4\xea\xcd\x47\x11\x97\xa4\xfe\x05\x7f\x67\xd7\x4a\x38\xf7\xb3\x68\xd8\xe0\x4e\x58\xd1\x38\x92\x46\x7b\x21\xb5\x03\xa1\x54\x10\xaf\xe5\x75\xa4\xc6\x72\xd4\x09\xe0\x38\x06\xfd\xf2\xce\x0f\x77\xb7\x1c\xb2\x35\x94\x2e\x29\x8d\x0d\x8b\x1c\xf6\x53\x47\xea\x1e\xc7\x06\xd3\xb2\xf0\xd2\x50\x3f\x6c\x5a\x99\x53\xec\xd0\x63\x0e\x41\x58\xea\x19\x6a\x5c\x4f\x6d\x43\x71\x05\x70\x8d\xb3\xcf\xf8\xd4\xa1\xf3\xc9\xc5\x2a\x21\x07\x8e\x3a\x85\xd5\x79\xdb\xe5\x1e\xb6\x09\xc0\xa1\xba\xfd\x1e\x17\x45\x96\x5c\x6c\x97\x5b\xd9\x86\xdc\xbb\x1d\x75\x31\x03\x1c\x2f\x1e\x2a\x03\x71\x4c\x2c\xc3\xf5\x9b\x01\x3c\xaf\xdd\x33\x8a\xc1\xa2\xb7\x8e\x53\xf4\x1b\x4f\xdd\xbd\xe9\x11\x07\x2e\xe8\x7a\x72\x6d\xc4\x12\x78\x0d\x43\x60\x7b\x6a\x65\xa7\x73\x58\x70\xec\xcf\x98\xa3\x5c\xa3\x1d\xf2\x5d\x4c\x4b\xb3\x7c\x91\x6a\x61\x21\x36\xd7\x50\xad\x25\x84\x46\xa6\x7a\x10\xcc\xb5\xe0\x54\x0e\x7e\xff\x23\x2c\x06\xe0\xa3\x0a\xf5\x64\xa8\x46\xda\x78\x6a\x26\x77\x1d\x95\x27\x88\x7c\x3e\x04\xa2\x5c\xc0\x5b\xf7\x4b\x87\x76\x13\x9c\x62\x05\x88\xf4\x13\x2f\x45\x7a\xac\x4d\xd8\x64\xb0\x61\x9f\xbc\x28\x27\xb7\xa8\xcd\x7e\x45\x7f\x70\x5f\xbc\x6c\xf4\xbd\x1f\x05\xbe\x1c\x12\x7e\x34\xb6\x11\xd4\x0f\x36\x4a\x33\xfa\x0e\xf5\xfa\xc2\x2d\x7d\xf3\x77\x4b\xf4\x5c\x54\x70\xc9\xa2\x28\x87\xbd\xc7\xa9\xc1\x76\x4b\x9a\x91\xdd\x77\x01\xd9\x57\x57\xa0\xa5\x0a\x7d\x03\x54\x24\xdf\x59\xcd\xeb\xf4\x39\x08\xcc\xb1\x22\xf9\x3b\xe1\xeb\x31\xf7\x96\x56\x66\x52\xdf\x3b\xbf\x45\xe6\x9f\x50\x14\x68\xc7\xdc\xeb\xb0\x36\x93\xfd\x51\x80\xb7\xc8\x9f\xb3\x1f\xb1\xdf\x8f\xc3\x47\xba\xe6\xc6\x55\xa1\xb3\xaf\x89\x17\xe2\xbc\xc2\xec\x23\xfc\x7b\x59\xa6\x28\xbf\x86\xca\x08\xe2\x4c\x74\x03\xef\xb7\x23\x5a\x3c\x8f\x4f\x3f\x8e\xd4\x3c\x73\xba\x5d\xd7\x52\x15\x23\xcc\x7c\x70\x86\x4b\xd3\xc5\x27\xd3\x81\x32\x9d\xa5\x74\xe3\xd0\x0b\x88\xdc\xf9\xba\xfb\xf3\x12\xd6\xa1\x6a\xe1\x58\x9d\x66\xd2\xa3\x3e\x13\xf0\x0a\x44\xdb\x12\xe0\xc5\xf4\x7e\xec\x80\x53\x88\x8b\xf5\x72\x79\xa2\xf3\x99\x14\x84\x6f\x1a\xd9\xa8\x5a\x73\x4e\x7b\x61\xad\x38\x9c\xf9\xe3\x34\xff\xe1\xd4\xe7\x7b\x31\xfb\x89\xde\x10\x1f\x36\x91\xe3\xd9\x62\xa4\xfc\x0a\x30\x4a\x61\xce\x17\x77\x34\xde\xed\xd2\x65\x96\x65\xaf\x1d\x6f\x7a\x7c\x4e\x8c\xf8\x30\x27\xaf\x63\x3a\x77\x5e\xfe\x5f\xa2\xe7\x46\x22\x8a\xfc\xc1\x14\x51\x9c\x29\x42\xfb\xcd\x73\xe3\x3b\x0f\x43\x18\xe1\xd1\x3f\xca\xa3\x50\x2f\x28\xd2\x12\xbe\x87\x6f\x4e\x5c\xe9\x11\x4e\xbc\xe9\x55\xeb\xe8\x9d\xf3\x25\xbe\xb1\x29\xe5\x0d\xef\xb0\x17\xf3\xef\xc3\xf7\x4e\x04\x80\x9e\x61\xff\x04\x00\x00\xff\xff\xe8\xbe\x6f\x97\x09\x0d\x00\x00")

func templatesClientParameterGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesClientParameterGotmpl,
		"templates/client/parameter.gotmpl",
	)
}

func templatesClientParameterGotmpl() (*asset, error) {
	bytes, err := templatesClientParameterGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/client/parameter.gotmpl", size: 3337, mode: os.FileMode(420), modTime: time.Unix(1434128195, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templatesModelGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x54\x90\xc1\x6a\xc3\x30\x10\x44\xef\xfa\x8a\x21\xa4\xd0\x42\xeb\xdc\x0b\x3d\x35\x3d\xf4\x52\x02\xed\x0f\xa8\xf6\x5a\x16\x91\x25\x55\x5a\x27\x18\xa1\x7f\xaf\x1c\xc7\xc1\xb9\x8d\xd0\x9b\xd9\x9d\xf5\xb2\x3e\x4a\x45\x48\xa9\x3a\xcc\x32\x67\x21\x76\x3b\xfc\x74\x3a\xa2\xd5\x86\x70\x96\x11\x8a\x2c\x05\xc9\xd4\xe0\x77\x04\x77\x84\x78\x96\x4a\x51\x00\x3b\x67\xaa\x89\xff\x68\x34\x6b\xab\xca\xe7\xe2\xeb\xb5\xea\x18\x3e\xb8\x13\xa1\x1d\xf8\x12\xd5\x91\xc5\xe8\x06\x04\x7a\x09\x83\xbd\x4b\x5a\x46\xa0\x76\x7d\x2f\x6d\x23\x44\x4a\xba\x45\xf5\xd9\x7b\x17\x38\xe6\xac\x67\x81\x47\x81\xb2\x6e\x90\xb6\xac\x5d\xed\xa9\x95\x83\xe1\x1b\x94\x92\x0f\xda\x72\x8b\xcd\xc3\xdf\x06\x55\x29\x33\xc1\x64\x9b\xab\x9a\x6d\xdb\x23\x8d\xcf\xd8\x9e\xa4\x19\x08\xaf\x6f\xab\x21\x29\x4d\x7f\x39\x17\x14\xeb\xa4\x99\xbd\x8b\x7b\x12\x8b\xba\x6e\xba\x77\xf5\x37\x17\x8f\x9a\x62\xd6\xaf\x05\xe4\xd1\x5f\x2e\xfd\x6e\x64\x8c\x5f\xb2\x2f\x79\x88\x1c\x86\x9a\x91\xc4\xad\xd2\x21\x38\x4f\x81\x35\xc5\x8b\x93\xa9\xf7\x66\xba\xcb\x66\x46\x5b\x4d\xa6\x99\xab\x2d\xf3\xb3\xf8\x0f\x00\x00\xff\xff\xcb\x9b\x8f\x34\xc7\x01\x00\x00")

func templatesModelGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesModelGotmpl,
		"templates/model.gotmpl",
	)
}

func templatesModelGotmpl() (*asset, error) {
	bytes, err := templatesModelGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/model.gotmpl", size: 455, mode: os.FileMode(420), modTime: time.Unix(1433980969, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templatesModelvalidatorGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x55\xdf\x6f\xdb\x36\x10\x7e\xf7\x5f\x71\x13\x32\xc0\x5e\x13\xb9\x03\x86\x3d\xac\xcb\x80\xa2\xcd\xd0\x00\x5d\x16\xd4\xdd\x5e\x86\x3d\x30\xd2\x49\x62\x23\x91\x0a\x49\x39\xf1\x04\xfd\xef\x3b\x92\x92\x2d\xc9\xb2\xe3\x6c\xe8\x93\xa4\xfb\xc5\x8f\xdf\xdd\x7d\xaa\xeb\x18\x13\x2e\x10\x82\x52\xf1\x82\x1b\xbe\xa6\x4f\xcc\xe3\x35\xcb\x79\xcc\x8c\x54\x41\xd3\xcc\xea\x9a\x27\x10\x7e\xc2\x87\x8a\x2b\x8c\xc9\x40\x9f\xa8\x14\xfc\x74\x09\x6d\x1c\x6e\xbd\xf3\xba\x0e\x6f\x99\xc9\x9a\xe6\x1c\x02\x7a\xff\x28\x23\x66\xb8\x14\x4d\x13\x9c\x03\x7d\xff\xc9\xf2\x0a\xaf\x9e\x4a\x85\x5a\x3b\xf3\xe2\x8d\xab\xf5\xcd\x25\x08\x9e\x43\x3d\x03\x50\x68\x2a\x25\xac\x75\x66\xcf\x46\x11\x3b\x0c\x60\xb0\x28\x73\x3a\xab\x87\x75\x07\x13\x42\x68\xfa\xd1\xdd\xb5\x74\xce\x23\x9c\xb8\xcd\x0d\x62\xac\x57\xfc\x1f\x74\x16\x82\xac\x58\x71\xc3\x0a\xfa\xb4\x46\x7b\x35\x2e\xcc\x8f\x3f\xcc\x73\x14\xf3\x49\xd8\x8b\xde\x61\xb6\xe0\x6f\x5c\x5c\x13\x42\x3d\x4d\x4f\xe7\x7d\x8e\x9e\x11\x0e\x67\xdb\x55\x3e\x99\x2b\x07\x88\x3d\x1d\x03\xd4\x7a\xff\x13\xa0\x6d\xe5\x17\x01\xfa\x43\xf0\x87\x0a\x8f\x60\xea\x05\x7c\xbd\x31\xb2\x48\xae\x44\x55\x4c\x43\xb0\x9e\x17\x9f\xed\xac\xbe\xe6\x8b\x60\xac\xb8\x48\x73\x5c\x45\x19\x16\x6c\x65\xe7\xd4\x8e\xf0\x72\x09\xda\xd9\x41\x3b\xc7\xe4\x89\xb3\x44\x2a\xe0\x16\xf9\xeb\x37\xf4\xfc\x19\x0e\x8e\x29\xb9\x5f\xbd\x22\x20\x75\xad\x98\x48\x11\xc2\x8e\x7f\xa0\xc2\xfd\x8d\x92\x25\x2a\xb3\xe9\x2f\x54\x6f\x9f\xdc\x5b\xae\xd1\xe3\x13\xd2\xec\x63\xbc\x6d\x2b\xf8\x59\xf9\x9f\xe7\x79\x7e\xde\xc6\x31\xb7\xc4\xb3\x7c\x57\x64\x7b\x71\x3a\xd2\x59\x3f\x22\x5d\xd3\x92\x40\x2c\xb8\x6d\x5d\xc0\xc5\xd0\x69\x0d\xdf\xdb\x08\x47\x04\xc0\x49\x48\x00\x7a\x77\x26\x30\x07\x09\x86\x5f\x86\xa7\x8d\x9a\x2e\x95\x1e\xdf\xe3\x46\x9a\xb7\x79\x2e\x1f\x49\x2c\x83\xa9\x92\xc1\xde\xd8\x2d\x06\xa3\x33\x7e\x76\x52\x27\xef\xbe\x60\x64\x06\x5a\x47\xcd\x8a\x2a\x6d\x64\x01\xde\x69\xa1\xbe\x67\x86\x7d\xde\x94\x38\x58\x80\x29\x1c\xd6\xe2\xb6\x62\x4e\xa4\x17\xcc\xe8\x93\x87\x7b\xf7\x4f\x19\x73\xbb\xed\xed\xb5\xbe\xed\x44\xbc\x69\x86\xfd\x98\xfe\x0f\x75\xf3\x41\x1d\x01\x5f\xe0\x9d\xbb\xd9\xaf\x0e\x9b\x41\x35\x2c\xe3\xaf\xed\x81\x1f\x2d\x22\x85\x61\x04\x76\x94\x3e\xfa\x6d\x4c\xe5\x51\x28\x3e\xfd\xee\x68\x1d\xe6\x8e\xfb\x60\x93\xc7\x5d\x2b\x59\x74\xcf\x68\x3d\x9c\xd4\xb8\x57\x32\xda\x76\x7d\xce\xb8\x86\x84\xd3\x6a\x3d\x32\x0d\x29\x12\x32\x2a\x1a\xc3\xdd\x06\x4c\x46\xfb\xf6\xc8\xd2\x14\x15\x18\x29\xf3\xd0\xc6\x5f\xd9\xd1\x12\x29\x39\xbb\xbc\x82\xa7\x99\x01\xa2\x7e\x8d\x90\x54\xc6\x95\xca\x50\xc0\x46\x56\xd4\xaf\x0b\x55\x89\x41\xa5\xee\x08\x88\x64\x51\x30\x11\xcf\x66\xbc\x28\xa5\x32\x30\xa7\xfe\x06\x29\x37\x59\x75\x17\x92\x6f\x19\x31\x5d\xb1\xfc\x0b\x2f\x96\xa9\xbc\x68\xb3\x97\x7e\xc2\x83\x53\x42\xb5\x51\x49\x61\x4e\x0a\xcd\x8c\x29\xef\xb9\x59\x76\xb2\x1c\xcc\x9c\x7c\xb4\x8a\xf2\x1e\x13\x56\xe5\xe6\xda\xc1\xd4\x96\x5b\x9a\x19\x61\x12\x08\xbe\x7d\xe8\x96\xb7\xe3\x79\x97\x76\x76\x8f\x9b\x73\x38\x5b\xdb\x29\xb7\x13\x1f\xf6\xf2\xad\xcf\x6e\x6e\x0d\xfd\x4a\x3e\x76\x50\x6e\xe1\x7a\xd4\xed\xc5\xf6\xb7\xa1\x3d\xfd\xd4\xcc\x0f\x15\x71\xf8\x2e\x67\x5a\xb7\x3a\x98\x54\x22\x02\xab\x1c\x9f\x30\x42\x9a\x6a\xe5\xed\xf0\x1d\x99\x7a\x71\x0b\x18\x2f\x1b\x78\xbe\x28\x2f\xe5\xf4\xba\x59\x78\x35\x71\x6b\xe7\x57\xe8\x03\xd3\x6d\x12\xad\xab\x57\xc7\x35\x53\xd4\x63\x0d\x7f\xfd\xed\x82\x07\xb4\xb5\x02\xcd\xb1\x53\xe3\x03\x35\x06\xa2\x30\x44\x1d\x76\x17\xde\xd3\xfb\xc3\x12\x01\x0e\xd0\x25\xb0\xb2\x24\x0e\xe7\xf4\x71\x6e\x43\x16\x4e\x61\x87\x8d\xf2\x6f\x1e\x82\xd5\x5b\x8a\xb5\xf2\xfa\x7a\x5b\xa7\x2f\xaa\x76\x01\xa5\xe6\x06\x77\xf8\xaf\xac\xc7\x66\x85\x61\xb8\x5f\xbf\x4d\x27\x5c\x4e\xab\xe0\x2c\xea\xe8\x77\xe3\xb0\x6d\x06\xf4\xff\x5e\x03\xd2\x0e\x50\x76\xac\xc7\xbb\x43\x6c\x8f\x9f\xa5\xef\x78\xd3\x9f\xfd\x69\xed\xdf\x72\xa8\x3a\xff\x06\x00\x00\xff\xff\xb0\x4a\xc5\x4f\xee\x0b\x00\x00")

func templatesModelvalidatorGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesModelvalidatorGotmpl,
		"templates/modelvalidator.gotmpl",
	)
}

func templatesModelvalidatorGotmpl() (*asset, error) {
	bytes, err := templatesModelvalidatorGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/modelvalidator.gotmpl", size: 3054, mode: os.FileMode(420), modTime: time.Unix(1433983138, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templatesServerBuilderGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x59\x59\x6f\x23\xb9\x11\x7e\x8e\x7e\x45\x41\xd8\x0d\xba\x07\xda\xb6\x1f\x03\x03\x0e\xe0\x8c\x37\x18\xe7\x98\x18\xf6\x20\x79\x30\x06\x01\xdd\x4d\x49\x8c\xfb\x5a\x92\x6d\x45\x11\xf4\xdf\x53\xc5\xa3\x9b\x7d\x48\x23\xad\x3d\x58\x63\x30\x90\xc8\x62\xd5\x57\x77\x91\xaa\x59\xfa\xc2\x56\x1c\x76\xbb\xe4\xde\x7e\xdc\xef\x67\xb3\x8b\x0b\xf8\xb2\x16\x0a\x96\x22\xe7\xb0\x61\x0a\x56\xbc\xe4\x92\x69\x9e\xc1\xf3\x16\xf4\x9a\x83\xda\xb0\xd5\x8a\x4b\xd0\x55\x95\x27\x44\xff\x73\x26\xb4\x28\x57\xb8\xe9\xcf\x15\x62\xb5\xd6\x50\xcb\xea\x95\xc3\xb2\xd1\x86\xd5\x9a\x97\xb0\xad\x1a\x90\xfc\x27\xd9\x94\x3d\x4e\x5e\x04\xa4\x55\x51\xb0\x32\x9b\xcd\x44\x51\x57\x52\x43\x34\x03\x98\x2b\x2d\x91\xbb\x9a\xd3\xe7\x92\xeb\x8b\xb5\xd6\xb5\xf9\xb2\x12\x7a\xdd\x3c\x27\x78\xe8\x22\x65\xaa\x61\xf9\x7f\x44\x71\xb1\xaa\x7e\x72\x6c\x0d\xe1\x8b\xd0\x27\xd1\xaa\x9a\xa7\xa7\x11\x6a\xb9\x2c\x4e\xe3\xe9\xe4\x5f\x14\x22\xcb\x72\xbe\x61\x92\x9f\x75\x4c\xf1\xb4\x91\x42\x6f\xe7\x33\x3c\xb5\xdb\x49\x56\xa2\xb3\x92\x5b\xbe\x64\x4d\xae\xef\x8c\x81\xd4\x7e\xbf\xdb\xd5\x68\x1e\xbd\x84\xf9\x8f\xbf\xcc\x21\x41\x17\x12\x31\x2f\x33\xf7\xc9\x1e\xfb\xe1\x85\x6f\x17\xf0\xc3\x2b\xcb\x1b\x0e\x57\xd7\x90\x04\xe7\x69\x6f\xbf\x47\x52\x08\x39\x59\xda\x1e\xbb\xd8\x44\xc7\x67\xbe\xc1\x88\xb9\xa9\xeb\xcf\xac\xc0\xfd\x9b\xfb\x3b\x48\x25\x47\xef\x29\x60\x50\xf2\x0d\x84\xbb\x20\x4a\xa5\x59\x99\xf2\xd9\xb2\x29\xd3\x89\xb3\x11\x19\x1e\x3e\xd0\xff\xc9\x6d\x95\x36\x05\x2f\x75\x0c\x1f\x86\x12\x76\x06\x46\xf2\xc0\x53\x2e\x5e\xb9\x74\xcc\x51\x91\xdf\x0f\x28\x89\x10\x80\xd8\x5d\x81\xff\xb4\x30\x6b\x6b\x0c\xac\x9c\x4b\x75\x05\x05\x7b\xe1\x51\xc1\xea\x27\x1b\x59\x5f\xc9\xe0\xc9\x27\xbb\x1d\x5b\xe2\x65\x25\x0b\xa6\x91\x16\xac\xbf\xbd\xd9\xed\x6e\x66\xbf\x7c\xac\x4a\x85\x80\x91\x6a\x8e\x28\x6e\xfb\x8b\xfb\xfd\xbc\x47\x7c\x2f\xab\xac\x49\x07\xc4\x7e\xd1\x11\xef\xc9\xd3\x92\xeb\x46\x96\x63\x6d\x67\x36\x39\x47\x96\xd9\x25\x77\xe5\xb2\x42\x8e\x2a\x95\xa2\xd6\xa2\x2a\x91\x56\x6f\x6b\x3e\x22\x45\x55\x9a\x54\x1b\x5b\x1a\xab\x07\x7f\x7d\x07\x20\x41\x5a\x95\x9a\xff\x57\x77\x04\x5d\x10\x27\x1f\xed\xde\xac\xb3\xa9\xa7\x3a\x60\xd4\x59\x6b\xd0\x96\x9f\x33\xeb\x03\x5f\x09\xfc\xb8\x9d\x8d\x8c\x0a\x96\xcf\x6c\x64\xc0\x6e\xa3\xcd\x89\xce\xe6\xd6\x40\x1f\x73\xa6\x94\xd5\xdb\x6d\x49\x34\x2b\x49\x22\xac\x8c\x94\xb3\x8b\x88\x0a\xbf\x92\x43\xfe\xce\x33\xc1\xbe\xa0\xd5\xd0\x15\x58\xbe\x0a\x0e\x64\x42\x1b\x75\x53\xec\x5c\x92\x7a\xd1\x72\x32\xeb\x92\xce\xbf\x23\x60\x6e\xab\x0f\xac\xf6\x8b\x67\x03\x6b\xd9\x79\x60\x7e\x61\x1a\xd8\xa3\xab\x2d\x18\x87\xa2\x14\x14\x34\xca\x11\x88\x25\x16\x07\xf5\x27\xa6\x44\x7a\xd3\xe8\xf5\x04\x72\x5a\xee\xa1\xa6\xd4\x26\x16\x58\xd3\x99\x06\x8d\xd9\xa5\xa0\x51\x5c\x96\x48\x0e\x18\x01\x50\xe3\xd9\x4d\x25\x33\xf3\xc5\xc6\xb7\xd5\x56\x94\xa9\xa8\x59\x8e\x82\x51\x8a\xc0\x8e\xc1\x25\x05\x0a\x6e\xa2\x0c\x0c\x44\x91\x32\xc3\x78\x83\x25\x13\x9e\x09\x93\xd9\x19\x69\x6f\x20\x11\x8c\xc8\x06\xc7\xc2\x05\x49\x0c\x11\x95\x92\x7b\x2f\x68\xbf\x5f\x00\x97\xb2\x92\x71\x67\x16\xaf\x32\x66\xc8\x5f\xf9\xf6\x2d\x3a\x33\x6c\x89\x2f\xd8\xe5\x7e\xad\x96\xa8\x20\x76\xd9\x8a\x18\x00\xab\x05\x60\x5d\x26\x18\xae\xd8\x51\x37\x15\x19\x12\x08\xdb\x3c\x71\xe7\xb1\x6a\x64\xea\x6b\xf4\x31\x7b\x9c\x62\x87\xe9\x40\xf9\x47\x4d\x9d\xd9\xc6\xc7\xc8\x2a\x2e\xbd\x41\x71\xcc\x6c\xc2\x54\x79\x6a\x5f\x19\x4c\x20\x3b\xb4\x9f\x1a\xec\xed\xc1\xe9\x8e\xba\x0d\xbc\x76\x0e\x99\x96\x13\x4e\x2a\xc9\x24\x89\x55\x22\x57\xc7\x58\x1c\x3a\x35\x32\x02\xea\xfb\xc8\xe5\x2b\xff\x99\x2c\x05\x38\xdb\xa4\x2c\xcf\xd1\x01\x66\x94\x41\x1f\x71\xbf\x2e\x6d\xa1\xce\x16\xa4\xaa\xe4\xb4\xc4\x7c\xd9\xf2\x96\xb0\xfc\x9e\x1b\x6d\x86\xa0\x14\x8f\xa3\xd5\xe8\xb3\x84\x6a\xe3\x22\x9c\x06\x28\xa4\x0b\x84\x9a\x5e\x44\x7e\x34\xe5\xf4\x81\xab\x1a\x3d\xc1\xff\x85\xa9\xcb\xe5\x02\x3e\xb8\xd5\x5f\x1a\xae\x74\xeb\x51\xdb\x27\x1e\xb9\xbe\x1d\x16\x4e\xef\x26\x0f\xad\xf6\x3b\x05\x15\x19\x5b\x58\x4c\x9f\x8e\xc6\xbd\x76\xd8\x92\xe3\x09\x09\x51\xe1\x8b\x55\x9b\x7f\xbb\xd9\xef\x46\xbc\x92\x61\x45\xbf\x86\xf6\xe0\x08\x7d\xdb\x0f\x7c\x46\x85\x0a\xa4\x7e\xf3\x8d\x0a\x78\x21\x67\x2a\xd0\x62\x1b\x2b\x30\xb4\xfd\x14\xfa\xb7\x99\x7f\x68\xfb\xd8\x41\x26\xc4\x87\x66\x88\xa1\xe5\xfb\x60\xbf\xa3\xa9\x87\x76\x3e\x07\xac\x3f\xe4\xc0\xfe\xd9\x4d\x12\x21\x48\x5f\x99\x31\x39\x1d\x5f\x37\x6f\x9c\x01\xd1\xf1\xb5\xd0\xc2\xd9\xe4\x28\x46\x2f\xc7\x62\x7b\x70\x38\x2c\xaf\xfe\xcc\xd1\x28\x5d\x15\x0e\x17\xe0\x70\x2d\x32\xa6\x2b\x79\x06\xc0\x3e\xf3\xc8\x74\x57\xdf\xee\x1c\x5b\x87\xdc\x52\x2c\x3a\x29\x7e\xe3\x9f\x7e\x21\x9e\x9e\xa8\xbd\x3a\xc9\x4d\x96\x19\x01\x9e\x73\xc0\xcb\x17\x18\xc7\x8b\xfb\x1d\x1e\xba\xc2\xf5\x8c\xa0\x57\x85\xba\x9c\xa1\xb4\x97\x82\x6e\xb1\xe5\x96\x70\xbf\x32\x09\x4d\x19\x38\xfd\xe9\xeb\xb1\xa1\x10\x57\xb1\xb9\x8c\x95\x3d\x30\xda\x5d\x5f\x43\x29\x72\xb0\x37\x89\x9e\x98\x6b\x6c\xcb\x35\x76\x87\x28\x5c\x5d\x98\x31\x6d\x82\xd1\x3c\x36\x23\xfd\x37\x06\xc3\xd3\xc0\xb5\xe3\xdd\x5b\xc1\x79\x46\xc7\xc0\x1d\x1a\x0e\x4f\xc0\x69\x06\x8f\xb7\x62\x24\x26\xc7\xf0\x85\x33\xc9\x69\xb0\x7c\xf7\x7f\x2b\x32\xc7\x67\x04\xce\xa2\xc8\x79\xd9\x3b\x1e\xc3\x1f\xe1\xd2\x09\x73\x05\x84\x92\xd0\x74\xf6\x65\x34\x2f\x84\x52\x54\xaa\xc2\x8c\xb9\x82\x1f\xd5\xdc\x4f\xaf\x2a\xf9\x4b\x25\xca\x21\x22\xfc\x17\xc7\x83\xcb\x22\x2a\x85\x59\xd9\x9b\x57\xb0\x06\xc0\x8a\x1a\x3e\x73\x89\x13\x4e\x64\x0c\x56\x68\xab\x32\x98\xd7\x44\x76\x56\xe3\x0c\xa4\x44\x2d\x93\xbb\xdb\xb6\x6b\x9e\x39\xb3\x18\x23\x1d\xac\xb1\x9d\x38\xab\xe4\x4d\x37\x36\x57\x52\xb5\x8a\x52\xa1\x61\xbd\xad\x76\xfa\xa4\xdb\xad\x58\x0a\x6a\x0f\x2e\xb6\x41\xa5\x6b\x4e\x4d\xe5\x74\xad\x47\x62\x23\xc7\x23\xbc\xf6\x9a\x7b\xb4\x4f\xa0\x47\xb3\x1f\x0f\xaf\xc5\x74\x3d\xeb\x31\x73\xc5\x98\x26\xe0\x43\xb9\x27\xb9\xa2\x2e\x7c\x75\x3d\xf9\x7a\x31\xe2\x18\xdb\x2b\x37\xd8\x1a\x6e\x71\xd2\x61\x9b\x41\x1e\xb7\x7b\x2c\xc1\xd9\x33\x5d\x1b\x52\xb7\x72\x42\x2d\xa0\xbf\x14\xef\x2b\x26\x43\xac\x91\xe6\x57\x33\x7f\xbb\x9f\xb8\x46\x5a\x05\x9e\x48\xca\x57\xcc\x36\xef\x87\xa4\x25\x89\xac\x27\x9a\x05\xd4\xdd\xed\x4d\x94\x18\x34\x4b\x96\xf2\xdd\xbe\x8b\x95\xc3\x91\x32\xae\x23\x86\x5f\xbc\x8f\xbb\x32\xd2\x47\x18\xde\xfa\x0e\x41\xec\x68\x9c\xc7\x8d\xc2\xde\xac\xc9\x5d\xb9\xb0\xf1\x8e\xb7\xbf\xf7\x44\x8e\xec\x62\x18\x22\x0f\xbf\xed\x5d\x15\x72\x4c\x2d\xfc\xe0\x06\xd4\xaf\x0f\xdd\x59\xdb\xbf\x7d\x9b\xea\x27\x90\x7f\x1a\x99\xca\x9d\x6e\xf2\x3b\x27\x6d\x42\x39\xdd\x7c\xad\xda\x9e\x3d\x99\x1e\x6d\x33\xee\x32\xa3\xd7\xcf\xbf\x9d\x0e\x9e\x83\xcf\x84\x7f\x2f\xa0\xd0\x5d\x0a\x04\x40\x7a\x59\x50\xe8\x71\x0e\xf4\x24\xf7\x76\x6e\xf2\x1c\x8b\x93\xc0\x19\xe5\x7f\xa8\xe0\x38\x31\xc2\xc7\x9b\x2e\x3b\x5c\x9c\x0d\x09\x28\xe6\x4e\x1d\x52\x26\xa2\xe1\x3d\x63\xc3\x4f\x09\xfd\xd8\xf0\xaf\x53\xef\x17\x1b\xa1\x9c\x93\x63\xa3\x9d\x85\x7c\x6c\xf4\xa7\xa9\x6f\x87\x86\x67\xf0\x0e\xa1\xd1\x93\xfc\xdb\x86\x46\xf0\xe0\xf7\x3d\x43\xc3\x8d\x40\xc1\x78\x11\xbe\xf4\xb6\x91\xd1\xbe\x56\xfd\xca\x11\xa3\x13\x33\x39\x5f\x44\xa1\xd0\x05\x3c\x57\x55\x6e\x87\x88\xc9\x61\xb0\x7d\xa6\xee\xcd\x7f\x9d\x92\x58\xbf\x19\xaa\xee\xec\xb2\x5e\x00\x16\xf2\xab\x29\x8b\x7b\x46\x4f\x01\xa6\xaf\x9d\xbd\xcc\x49\xb2\xd3\xe9\x7a\x52\x53\x75\x6a\x7c\x64\xd8\x4f\xa2\x23\x6a\xf8\x37\xf9\x9e\x16\x47\xc8\x20\x78\xb3\xff\xcc\x37\x0f\x55\xa3\xd9\x73\xce\xdd\xf3\xfd\x18\x5e\x62\x7e\x2c\x19\x73\x5c\x90\xb8\x6e\xe4\xa5\x62\x3c\x18\xc1\x8f\x99\xfc\xf8\xcf\x2d\x47\xe6\xfa\xc1\x93\xe0\x51\x31\x4f\xc1\x18\xe2\x92\xa5\x7b\x29\xb4\xbf\x3a\x05\xa9\x32\xa1\xba\x33\xda\x84\xf6\xd3\x57\x89\xb8\x9f\x30\xa7\x23\xfb\x8e\x60\x26\x5e\x71\xc3\xcc\x35\x63\x74\xf0\x5b\x1d\xf9\xa1\xbd\x15\xe8\x0a\xe7\x1d\xda\xa7\xe4\xa5\x1f\x8b\x2a\x94\x09\x9f\xbe\x7c\xb9\xa7\xa3\xf4\x5c\xf9\xcc\xe9\x51\x3f\x83\x4c\x48\x9e\xea\x7c\x4b\x77\x7b\xe3\xca\xbf\xd1\xdd\xa4\xbc\x29\x33\x23\x20\x9a\x5f\xfd\xe1\xf2\xf2\x12\xaf\x29\xac\x16\x76\x74\x8f\xf0\xbe\x72\xe6\xe5\x02\xd3\xa0\x57\x56\x76\xdd\x0d\xeb\xb0\xa9\x63\xca\x8c\xcb\x83\x79\x31\x4e\xb5\x6f\xfd\xe4\xe6\x1d\x41\x13\xa0\x3b\x19\xd1\xf3\xc7\xff\x03\x00\x00\xff\xff\x75\x06\x19\x97\x3a\x1f\x00\x00")

func templatesServerBuilderGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServerBuilderGotmpl,
		"templates/server/builder.gotmpl",
	)
}

func templatesServerBuilderGotmpl() (*asset, error) {
	bytes, err := templatesServerBuilderGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/server/builder.gotmpl", size: 7994, mode: os.FileMode(420), modTime: time.Unix(1433877279, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templatesServerConfigureapiGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x54\xcb\x6e\xdb\x3a\x10\xdd\xfb\x2b\x06\x46\x2e\xae\x1d\xb8\xf2\xbe\x40\x16\x69\xda\xa2\x41\xd1\x24\x88\x0b\x14\xe8\x8e\xa6\x46\x32\x63\x89\x54\xf9\x88\xe3\x0a\xfc\xf7\x0e\x45\xc9\x96\xed\x34\xcf\x76\xd7\x95\xc4\xe1\xbc\xce\x39\x33\xac\x18\x5f\xb2\x1c\xa1\x64\x42\x0e\x06\xa2\xac\x94\xb6\x30\x1a\x00\x0c\x73\x61\x17\x6e\x9e\x70\x55\x4e\x39\x33\x8e\x15\x37\xa2\x9c\xe6\xea\x8d\x59\xb1\x3c\x47\x3d\x45\xad\x95\x36\xc3\xa7\xb8\x2e\xac\xad\x96\xc2\x0e\x07\xe4\x5c\xd7\x9a\x49\x2a\x98\xbc\xc7\x8c\xb9\xc2\x9e\x37\x25\x8d\xf7\x75\x5d\x69\x21\x6d\x06\xc3\xff\x7e\x0c\x21\xf1\xbe\x71\x46\x99\xb6\x7f\x31\xec\x68\x89\xeb\x09\x1c\xdd\xb2\xc2\x21\xbc\x3d\x81\xa4\x17\x1f\xee\xbc\x27\x57\xe8\x67\x8a\xbe\x3b\xe9\xc6\x83\xc1\x74\x0a\x5f\x17\xc2\x40\x26\x0a\x04\xfa\x1a\x96\x21\x58\x05\x98\x0a\x9b\xc0\xa5\xe4\x64\xb5\x80\x77\xc2\x58\x13\xfe\x56\x4a\xfe\x6f\x61\x8e\xa0\x6e\x51\xaf\xb4\xb0\x16\x89\xaf\xcc\x49\x0e\x5c\xc9\x4c\xe4\x4e\xe3\xe9\xd5\xf9\x88\x55\x02\x8e\xeb\x3a\xb9\x8a\xbc\x7a\x9f\xd0\xe1\xb4\xaa\x2e\x58\x49\x07\xf2\x18\x43\x4d\x9d\x50\xf9\x4d\x18\xd8\x05\x42\x88\x5b\xa0\x46\xba\xa3\xdf\x64\x86\xfa\x16\x3f\x04\x86\xe1\x04\x22\xd3\x3d\xdb\x0e\x8f\x67\x4a\x1a\x57\x62\xc3\x80\xc8\x1a\x42\x0a\x2c\x51\x5a\x66\x85\x92\xde\x87\x74\xd4\xc3\x59\xc1\x8c\x89\x5d\xb4\x11\x21\x35\x5d\xec\xfb\x8f\xc6\x91\xa9\xc2\xe0\x23\xc1\xad\xac\x5d\x07\xfa\x23\xb1\x31\x0a\x94\x8c\x34\x08\x95\x5c\x23\x4b\x51\x4f\xc0\x32\x9d\xa3\x05\x52\x04\x75\xc6\x38\xd6\x7e\x1c\x21\x35\x4c\x00\x68\xb4\x4e\xcb\x0e\xe5\x85\xb2\x9b\x8e\x30\x1d\x0d\xa9\x7a\x2c\x1c\x08\x8b\x95\x17\xcc\x80\x54\x16\xd6\x18\x14\x41\x09\x62\x1b\x30\x0c\xdd\xfb\x71\x7f\x70\xf6\x47\x28\xb9\xd2\x2a\x75\xfc\x39\x8c\xb5\x11\x2f\x63\xac\x17\xdc\x31\xd6\x99\xb6\x8c\xad\x02\x63\xdf\x68\xae\x02\x63\x29\xb3\xec\xf5\x7c\x55\x5d\xdd\xd7\xf2\x35\x43\xee\xa8\xb3\x35\x6d\xac\x90\x22\x60\x36\xad\x43\xc3\x9e\x79\xc7\x8c\xe0\xa7\xce\x2e\x1a\xeb\x21\x01\xe1\x8a\xc0\x37\x38\x9d\xa1\x86\x8c\xa5\xfd\xcc\x27\x50\x91\x4b\x7b\x18\xc3\xa8\x59\x1b\xfa\xe7\xa2\x62\x85\xf7\x93\x88\x70\xbc\x8b\x5a\x8a\x62\xf2\x3b\xe8\xf3\xd0\x07\xb0\x50\xed\x71\xc8\x5b\xa8\x1d\x0c\x5a\xce\xcf\xb8\x7e\x22\x0e\xab\x96\x94\xf5\xcf\xf5\x1e\xf6\x9f\x9e\xaf\xd8\xfd\x56\xc3\x4c\xab\x32\x1c\x67\xca\x69\x1e\x0c\xcf\x01\x76\xbf\x9a\x97\x15\x6a\xd6\x8a\x18\xa1\x6f\xde\xaa\x43\xc8\x9f\x98\x4c\x8b\x6e\xee\x77\xde\xb4\x43\xa7\xed\x30\x77\x69\x35\x2b\xa9\x48\xd5\x7c\x1f\x4a\x10\x3d\xfb\x72\x50\x46\x48\x02\xdf\x4a\x8b\x9f\x98\x6e\x93\x4d\x76\x55\xdb\xba\x50\x9d\x8e\x7f\xd8\x53\xa3\x8d\x20\x99\x62\xd0\xcc\x71\xda\x7e\xf3\x45\xa5\x58\x74\x89\xae\x1b\x89\xcc\x99\x0a\x74\xde\x5d\xce\x6f\x90\x5b\xef\x8f\x37\xc5\xf6\x82\x36\x6d\xdc\xa7\xf3\xfd\x55\x3a\xc3\x77\xd4\x6a\x3f\xc1\xe1\x3c\xa8\x4e\xa5\xde\x30\x3c\x61\x8f\x1f\x7c\x88\x76\xc4\x7c\x89\x7e\xff\x24\xfb\x6b\x92\xed\xed\xab\x1f\xfc\x0a\x00\x00\xff\xff\x51\x08\xda\x7f\x99\x09\x00\x00")

func templatesServerConfigureapiGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServerConfigureapiGotmpl,
		"templates/server/configureapi.gotmpl",
	)
}

func templatesServerConfigureapiGotmpl() (*asset, error) {
	bytes, err := templatesServerConfigureapiGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/server/configureapi.gotmpl", size: 2457, mode: os.FileMode(420), modTime: time.Unix(1433743166, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templatesServerMainGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x54\x4d\x6f\xdb\x30\x0c\x3d\xc7\xbf\x82\x15\x5a\xc0\xc1\x62\x79\xe7\x0c\x39\x04\x18\xb6\x66\x58\x3f\xd0\xb4\xd8\x65\x17\xd5\x91\x1d\xb5\x8a\xe4\x49\x72\xb2\x20\xf0\x7f\x1f\x29\xdb\xa9\xd7\x5d\x76\x89\x63\xf2\xe9\xf1\xf1\x91\x72\x2d\x8a\x57\x51\x49\xd8\x09\x65\x92\x44\xed\x6a\xeb\x02\xa4\x09\x00\xd3\xb6\x62\xf4\xb4\x3e\x3e\x8c\x0c\xf9\x36\x84\x9a\x25\xf4\x56\xa9\xb0\x6d\x9e\x79\x61\x77\x79\x21\x7c\x23\xf4\x8b\xda\xe5\x95\xcd\xfc\x41\x54\x95\x74\xb9\xaf\x65\x11\x91\xa7\x93\x13\x06\xf9\xf9\x67\x59\x8a\x46\x87\x55\xac\xe0\xdb\xf6\x74\xaa\x9d\x32\xa1\x04\x76\xf5\x8b\x01\x6f\xdb\x08\x96\x66\xd3\xff\xeb\x8e\x5d\xbe\xca\xe3\x0c\x2e\xf7\x42\x37\x12\xe6\x0b\xe0\xa3\xf3\x94\x6b\x5b\x84\xc2\x98\xa9\xc3\xfe\x45\x37\x4d\x92\x3c\x87\xc7\xad\xf2\x50\x2a\x2d\xe1\x20\x3c\x54\xd2\x48\x27\x82\xdc\xc0\xf3\x11\xc2\x56\x42\xaf\x1c\x82\xb5\x9a\x13\xfe\x46\xbc\x62\xb4\x71\x12\x8c\x0d\x18\x06\xbb\x97\xee\xe0\x54\x90\x88\x1f\xa8\x44\x19\xf0\xcc\xd1\x36\x23\x42\x15\xe0\x59\x16\xa2\xf1\x98\xd6\x9a\x92\x0e\xe4\x46\x05\x0f\x07\xdb\x68\x2c\x28\x41\x5b\x1f\x2e\xa8\xc8\x2a\xf4\x41\x6b\xf4\x91\x32\x43\x91\x20\x0d\xa8\x32\x32\xcb\xdf\xb5\x56\x85\x0a\x08\x20\x5b\x55\x79\x84\x2c\x53\xa6\xd0\xcd\x46\x66\x34\x37\x28\xad\x8b\x3d\x0c\x1a\x62\x5d\x8c\xf9\xa6\x8e\xf3\xc4\x31\xed\x84\xd9\x78\xac\x58\xd9\xf9\x19\x35\xb4\xfc\x16\x90\x0e\xcb\x43\x16\x80\xf3\x9c\x73\xc8\x96\xe8\x21\x5f\xd6\xf5\xad\xd8\x49\xb2\x1c\x15\xf1\x7b\x34\xbb\x50\xb5\xd0\xe8\x7d\x96\xd5\xc3\x1b\x21\x47\xa9\xc1\xfb\x64\x2f\xdc\x50\xe8\xdb\xfa\xee\x16\x16\xf0\xe2\xad\xe1\x0f\xe2\x70\x23\xbd\xc7\xd5\x4b\xf1\xe0\xfa\x0d\xd0\xb6\x38\xae\xb2\x31\x45\x5c\xc9\x74\x0a\x27\x9c\x64\x4f\xb0\xc6\xf6\x67\x20\x9d\xa3\x55\x20\x2f\xf8\xad\x3c\xa4\x23\xf6\x19\x30\x36\x45\x3c\xea\x24\xd4\xc5\x02\x8c\xd2\x91\x01\xd0\xf3\x8a\x7f\x11\x01\xad\x31\x29\x26\x09\xd6\xd2\x86\x46\x87\x90\xcf\x7a\xfe\x55\xa2\xed\xfb\x94\xdd\xdf\x3d\x3c\x0e\x3c\x31\xbd\x58\x20\x71\xcf\xd3\x05\x80\x7d\x64\x03\xc3\x16\xa7\xf9\x8e\xe1\xfa\x6e\x7d\x66\x88\xe9\x31\x43\x17\xa0\x1b\x56\x08\x4d\x2f\x67\x26\x51\x2b\x22\x22\x2b\xbb\x7b\xd9\xb6\xd4\xe2\x78\x08\xcb\xfb\x55\x3a\xb2\x83\x6a\x14\xd6\x94\xaa\xc2\x4d\xa5\x1c\x52\x4c\x89\x4a\x2b\x1f\x68\xae\x67\xbf\xf0\x02\xf3\xef\x31\x98\xb2\x50\xd4\x6c\xd6\xe9\xf8\x00\x6c\xce\xf0\x97\xda\x9a\x26\x93\xf7\xce\x4d\x26\xff\xf8\x36\x41\xa9\x93\x72\x17\xe2\xb8\x43\x99\x32\x5a\x1b\x65\x2a\x92\x7d\xdd\xe0\xa2\x9d\xb5\x82\x08\x40\xdf\x8c\x79\x9e\x5f\xf9\x9f\x06\x4b\x0e\xaa\xf8\x72\xb3\x71\xe9\x34\x2a\xed\x4b\xa2\x44\xc2\xf2\x35\x2d\x61\xfa\x26\x1f\x1b\xea\x62\xdd\xfa\xad\xba\xc5\x7f\x5a\xb5\xed\x0f\xfc\x08\x3d\xad\xfa\x4d\x43\xb2\x4f\xff\x39\xf4\x36\xf9\x13\x00\x00\xff\xff\xa8\x8e\xc2\x6d\xf6\x04\x00\x00")

func templatesServerMainGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServerMainGotmpl,
		"templates/server/main.gotmpl",
	)
}

func templatesServerMainGotmpl() (*asset, error) {
	bytes, err := templatesServerMainGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/server/main.gotmpl", size: 1270, mode: os.FileMode(420), modTime: time.Unix(1433877279, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templatesServerOperationGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xdc\x56\xdf\x6f\xe4\x34\x10\x7e\xcf\x5f\x31\xac\x8e\x63\x53\x85\xf4\xbd\xa8\x0f\xd0\x03\xf5\x1e\x38\x4e\x6d\x05\x8f\xc8\x4d\x26\x1b\xd3\xc4\x4e\x1d\x7b\xb7\x4b\x94\xff\x9d\xf1\x8f\x64\x93\x6d\xba\x42\x40\x2b\x74\x52\xa5\x6e\xe2\xf1\x37\xfe\xbe\x99\xf9\x9c\x86\x65\x0f\x6c\x83\xd0\x75\xe9\x67\xff\xb3\xef\xa3\xe8\xfc\x1c\xee\x4a\xde\x42\xc1\x2b\x84\x1d\x6b\x61\x83\x02\x15\xd3\x98\xc3\xfd\x1e\x74\x89\xd0\xee\xd8\x66\x83\x0a\xb4\x94\x55\x6a\xe3\x7f\xcc\xb9\xe6\x62\x43\x8b\xc3\xbe\x9a\x6f\x4a\x0d\x8d\x92\x5b\x84\xc2\x68\x07\x55\xa2\x80\xbd\x34\xa0\xf0\x5b\x65\x84\x43\x1a\xa0\x21\x93\x75\xcd\x44\x1e\x45\xbc\x6e\xa4\xd2\xb0\x8e\x00\x56\x02\xf5\x79\xa9\x75\xb3\x8a\xe8\xa9\xeb\x14\x13\x74\xd8\xf4\x03\x16\xcc\x54\xfa\xa3\x0b\x6c\xfb\xbe\xeb\x1a\xc5\x85\x2e\x60\xf5\xf5\xe3\x0a\x52\xa2\x60\x83\x51\xe4\xe1\x97\xdf\xf6\xee\x01\xf7\x09\xbc\xdb\xb2\xca\x20\x5c\x5c\x42\x3a\xd9\x6f\xd7\xfa\x9e\x42\x61\x8a\xe4\x63\x67\x70\xb1\x53\x87\xe4\xba\xaa\x58\xdb\x7e\x62\x35\x2d\x5f\xd3\xb1\x2b\x54\x3f\x19\x91\x81\x36\x4a\xb4\xc0\x88\xb1\xc8\x34\x97\x02\x76\x5c\x97\x8e\xa8\x72\x7a\xb4\x7c\x23\x18\x05\x21\x50\x1a\x49\x81\x04\x75\x6d\x88\xf8\x04\x0f\x4a\x0f\x18\xe9\x7d\x83\x27\x72\xd9\x1c\xeb\xae\xe3\x05\x50\xf1\x14\xab\x1d\x93\x69\xb0\x7f\x1b\x8e\xee\x02\x69\x37\xa4\xdf\x1b\x5d\x4a\xc5\xff\xa4\x72\x8e\x1b\x13\x98\x86\x4d\x42\xfa\xfe\xcc\x36\x07\xa9\x92\xf1\x86\x55\x36\xc0\xc5\xc5\x10\x52\xdf\x9a\x2c\xc3\xb6\xfd\x59\xe6\x58\x0d\xdb\x6f\xd0\xe9\x70\x25\xeb\xa6\xc2\xa7\x5f\xee\xff\xc0\x4c\x3b\xa0\x90\xe2\x68\xd3\x98\x1c\x95\x92\x8a\x24\xb6\xcc\x60\x5d\x88\x97\xc9\xc7\xe0\x1f\x8e\xf8\x37\xee\x3f\xbc\x86\x0c\xcd\x20\x01\xbc\xb9\x20\xd0\x51\x07\x2a\x07\x01\x85\x58\xa4\xfc\x9f\xb1\x1b\xd8\x44\xfd\xcb\x9d\x6e\x7b\x17\x55\xc1\x32\x9a\x6c\x49\x26\x50\x32\x0d\x19\x13\xa1\x6f\x81\xa6\x86\xe7\x8b\x8d\xed\xcf\x7a\xa2\xaf\x27\xc8\x96\xf3\x62\x8d\xbf\x8c\x1e\xf7\xf2\x7e\xc2\xdd\x9c\x0e\x64\x0a\xc9\x0d\xad\x85\x08\xdc\x81\xf5\xbe\x74\xd0\xc6\x6b\x8d\x8b\xca\xca\xc6\xba\x28\x19\x8e\x9f\x9d\x67\xb8\xeb\x4c\x3f\xc1\x59\xcd\x73\x42\xda\x31\x85\xe9\x95\x24\xa5\x9f\x74\x32\x98\xcd\x72\x3d\x62\xd7\xec\xd3\x44\x93\x56\x7c\x3f\x5f\xea\x02\xe4\x05\x50\xae\x24\xd4\x4e\x5d\x0c\x09\x7a\x4b\xd9\x4b\xf7\x41\x66\xb7\x9a\xd4\xde\x38\x9d\x66\x4f\xde\x65\x17\x1a\x04\x5a\xad\x4c\xa6\x5d\xfe\x90\x68\x89\x8f\xb3\xea\x69\xb7\xf8\xff\xb0\x68\x09\x07\x5f\xbf\x3e\x25\x82\x3d\xb8\x77\x24\x5a\xbe\xc1\x0c\xf9\x16\x55\x38\xd5\x91\x3c\x31\xdc\xa2\xda\xe2\xf5\xdd\xdd\xe7\xb5\x0a\xe5\xbb\xc1\xb6\x91\xa2\xc5\xdf\x14\xa7\xde\x4e\x40\xc1\x59\x78\xff\x68\xb0\xd5\x61\xba\xa5\xd1\x98\xc0\xef\xf6\x62\x7a\x96\x65\x20\x97\xde\xd8\xa8\x8f\xa2\x90\x6b\xeb\x92\x03\xd5\x69\x23\x1b\x37\xc8\x09\x50\x97\x9d\x86\x1a\x37\xad\xed\x91\x2c\x6e\x4c\x80\x04\x67\x77\x7e\x75\x09\x82\x57\xee\x60\x70\xea\x38\x8e\x59\x4e\x4c\x09\x22\xa0\xd0\x18\xc9\xdc\x50\xe3\x27\x03\x27\x02\x8c\x1d\x90\x6f\x1b\xfa\x69\x2f\xd4\x2d\x53\x70\xb0\x54\x47\x44\x48\xba\xf5\xf1\x11\x0e\x93\x08\xab\xd1\x0f\xba\x7e\x15\xcf\xc6\x6b\x32\xae\xfe\xe0\x9e\xfa\xfc\xec\x87\x0c\x97\x3e\xc7\x09\xf8\x41\x3c\x4a\x51\xb5\x38\x3c\xa5\xeb\x23\x6f\x88\x81\xe6\x96\xeb\x6f\x5a\x90\x0f\xfe\x73\x87\xfe\x68\x68\xab\x6a\xef\xaf\xf3\xe7\x3e\xe2\x28\xcf\xbe\x49\x82\xce\x27\x2b\xf4\x03\x17\xf9\xaf\xd6\x4a\x43\xa3\x8c\x85\x4a\x8e\x5a\xfc\xfd\x73\x8c\xd1\x15\x1d\x13\xd2\x63\x70\xb4\xef\x66\xf5\xb5\x54\xee\x29\xcd\x60\xcc\xaf\x55\xee\xc5\x56\x1d\x5f\xce\x8d\x52\x59\xac\x83\x57\x2e\xc6\x5c\x84\xf5\x25\xf9\xc2\xd0\xa6\x2f\xdd\x1d\x8b\x4a\x8d\x19\xc7\x86\x71\x65\x66\x99\x36\xae\xb0\xe1\x66\x73\xdf\x71\xbe\x1a\x6f\x38\x2c\xd1\xbf\x87\x7d\x41\xe8\x85\x06\xf1\x6d\xea\xde\xfe\xcd\x02\x2d\x36\xf1\x3f\xaa\xc2\x78\xed\xfe\x6f\xa4\x7f\x7b\xe5\x9d\x41\xf4\xd1\x5f\x01\x00\x00\xff\xff\xf6\x60\xe1\x76\x99\x0d\x00\x00")

func templatesServerOperationGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServerOperationGotmpl,
		"templates/server/operation.gotmpl",
	)
}

func templatesServerOperationGotmpl() (*asset, error) {
	bytes, err := templatesServerOperationGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/server/operation.gotmpl", size: 3481, mode: os.FileMode(420), modTime: time.Unix(1433743166, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templatesServerParameterGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x59\x4b\x53\x1c\xbf\x11\xbf\xef\xa7\xe8\x6c\xd9\xae\x5d\xbc\x1e\x38\xb8\x72\xb0\x43\x0e\xc6\x38\xa6\xca\x71\x39\x60\x73\xb1\x5d\x29\x31\xa3\xdd\x55\x98\x17\x92\x06\x58\x53\xfb\xdd\xd3\x2d\x69\x66\x34\x4f\x58\x02\x95\xff\xe1\xef\x1d\x3d\x5a\xbf\xee\xfe\xf5\x43\xe2\xee\x2e\xe2\x4b\x91\x72\x98\xaa\x58\x84\xfc\x9a\xc5\x22\x62\x3a\x93\xd3\xed\x76\x72\x77\x27\x96\x10\x7c\xe5\x3c\x52\x67\xe2\x0f\x37\x23\xc1\x37\x26\x59\xf2\x95\x25\xf8\x49\x83\xf0\xee\x10\x44\xaa\xff\xfa\x76\x16\xf3\x74\x86\xf3\xe7\x2c\x2e\xf8\xf1\x6d\x2e\xb9\x52\x22\x4b\xb7\xdb\xf9\x1c\xb7\xf1\x34\xaa\x04\xfe\x53\xa4\x27\x9a\x27\x0a\x07\xf0\x93\x4b\x49\x32\xdc\xc1\xbc\x9a\x9d\x99\xb3\xf4\x7a\xbb\x5d\xc0\x14\x7f\x7f\xc9\x42\xa6\x8d\xc0\xe9\x02\xba\x38\xcc\x58\x2d\x79\xfe\xde\x08\xfe\xcb\x21\xa4\x22\x86\xbb\x09\x80\xe4\xba\x90\x29\x8d\x4e\xb6\x6d\x40\xec\x76\x0c\x90\x9b\x7d\x14\xa0\x4a\xf2\x4e\x80\x7e\xa4\xe2\xaa\xe0\x23\x98\xbc\x05\xf7\xc1\xea\xfa\x63\x17\x24\xc7\x69\x91\xf4\x43\xa0\x99\x9d\xcf\x36\xa3\x56\xe6\x83\x61\x98\x7f\x6b\x9a\xe6\x32\xcb\xb9\xd4\x9b\x1e\xa6\x9e\xa8\x6f\x52\x24\x42\x8b\x6b\x4e\x3b\xd0\x3a\x79\x8c\x50\x69\x8f\x1b\xae\x37\x41\x40\x4b\x7c\x55\x4f\xd4\x51\xa1\x74\x96\x7c\xca\x64\xc2\xb4\xe6\xb2\x29\x23\x34\x93\x4b\x33\x79\x8f\x98\x2c\xd5\x0c\xb1\xb6\x04\xb4\xe2\xab\xb9\xb3\xa5\xe4\x85\x48\xa3\x0a\xf4\xb4\x6f\x85\x91\x46\xcb\xb8\x67\x00\xa4\x20\x4f\x35\x2d\x0b\x4e\x70\xe6\xf6\x9c\x21\x86\x90\xdc\xa6\x6e\xd8\x2a\x38\xcb\x63\xa1\x3f\x6c\xac\x82\xd6\x77\xb4\xde\x5f\xfb\xb3\x6f\xf4\xb7\xf5\xee\x51\x16\xc7\x3c\x24\xff\x5a\x09\xe8\x65\x13\xda\xb1\xe2\x7d\x47\x4a\x76\x53\xeb\xe7\x4d\xaa\x3f\x06\x10\x86\xc8\xe4\x9a\x49\x68\xcc\x99\xcf\xef\x9b\x9c\xb7\x37\x9d\x3b\xda\x1d\xc7\x3c\x41\x70\x24\x61\x59\xa4\xe1\xac\xb1\x88\x12\x91\x61\xd8\xd1\x5a\xc4\x51\x97\x7d\xf5\x94\x3d\x62\x0e\x7b\x48\xb6\x4c\xaa\xc0\x89\xc7\x55\x86\x89\x4d\xee\xb4\xf9\x06\x56\x08\x42\xac\x38\x8b\x14\x46\xce\x4e\x90\x1d\x4d\x7d\x08\xe7\xc1\xfb\xd6\xd8\xdf\xa0\x65\x8f\xd6\x82\xd7\xaf\x1d\x08\x74\x29\x0a\x74\x90\x3b\xf4\xac\x27\x1a\xac\x27\x1e\xd8\x09\xe4\xe1\x35\x22\x27\x1e\x5e\x93\x29\x16\x65\x0c\x57\x66\xf0\x56\x34\x2d\x69\x78\xe0\x11\x60\x8e\x78\x5c\x0e\xf0\x02\xd6\x0f\x59\xb2\xe2\x49\x6a\x8c\x44\xc6\x9d\x55\x67\x0c\xe6\x87\x69\xcb\x1b\x36\x65\x8c\x63\x40\x1b\x57\x40\xac\x22\x83\x14\x69\x2a\x34\x46\x8b\x6e\x26\x6a\xe4\x22\x3a\x15\xda\x34\x3d\x04\x96\xe7\x48\xee\xe6\x29\x72\x01\xc6\xd2\x73\xb3\xc1\x06\x86\x11\xf7\x68\xc8\x23\xe6\xe8\x41\xdd\xc2\xbd\x1b\xf2\xf1\xd3\xaa\x04\x44\x5a\x41\x4d\xb2\x46\xba\x6b\x85\x8e\x9f\xa3\xfc\xa0\xf9\x9f\x5d\xe8\xe1\x7e\x0e\x33\x74\x0f\x29\x13\x59\x95\x88\x73\x16\x5e\xb2\x15\xb7\x75\xdf\xfc\xc4\xd9\xc9\xfe\x3e\x7c\x5f\x0b\x05\x4b\x11\x73\xb8\x61\x0a\x56\x1c\xed\x82\x0a\x45\x70\xb1\x01\xbd\xe6\x26\x0f\xaf\x30\x76\x75\x96\xc5\x01\xad\x3f\x8e\x30\x72\xd3\x15\x4e\x96\xfb\x12\xb1\x5a\x6b\xc0\xb4\x73\xcd\x31\xc7\x69\x23\x6a\xcd\x53\xd8\x64\x05\xea\xf5\x46\x16\x69\x43\x52\x79\x04\x84\x59\x92\xb0\x34\x9a\x4c\x44\x92\x67\x52\xc3\x0c\x95\x9e\xa6\x5c\xef\xaf\xb5\xce\xa7\xf4\xb1\x12\x7a\x5d\x5c\x04\xb8\x70\x3f\x64\xaa\x60\xf1\x7f\x44\xb2\xbf\xca\xde\x38\x51\x66\xe1\xa5\xd0\x0f\x5a\x4b\xff\x3e\x68\xa1\xcd\x0d\xbb\x9c\xbf\x5f\xf6\x18\xbb\x81\x36\x3e\x96\x2c\x45\xaf\x04\x1f\xf9\x92\x15\xb1\x3e\x31\x96\x50\x44\x5b\xac\xa6\xa9\x5e\xc2\xf4\xe5\x95\xa9\xbc\x36\x40\xd3\xc8\xfd\xb2\xdb\x5e\x5c\xf2\xcd\x02\x5e\x98\x10\x26\x6e\x06\xde\x7e\x9a\x33\x15\x04\x7c\x49\x76\x6d\x43\xdc\xdc\xd0\x80\x58\x14\x33\xa5\x6c\x3f\x68\x5a\x43\x85\x1e\x32\x91\xa2\x80\xc5\xb1\xf1\xe1\x45\x56\xa4\x11\xe4\x76\x96\x8a\x07\x0d\xe2\xd6\xcf\x05\x7a\xd2\xdb\x0f\x54\x82\x4c\xe6\x24\xd9\x7a\x93\x8b\x10\x45\x18\x46\x61\x30\x62\xb9\x86\xec\xc2\xc4\x60\x04\x4b\x99\x25\xc0\x80\xac\x12\x9c\x72\x6c\x12\x95\x9e\xe0\x06\xde\x8f\x48\x69\x59\x84\xda\x95\x1b\x67\x3b\x3b\x55\x96\x92\x8f\x5c\x85\x52\xe4\x36\x6b\x5b\xc5\x1a\x43\xbe\x15\x83\x6f\xae\x56\x3a\xd4\x75\x2d\xaf\xcd\x63\xa3\xe4\x03\x26\x05\x87\x0e\x8d\xa0\xd7\x40\x59\x02\xed\x82\xd6\x28\x9d\x8f\x5f\x48\x77\xb3\x64\x01\x42\x03\x42\x2f\x12\x1c\xd5\x6b\xa6\x89\xeb\x79\xcc\x6f\x29\x6a\xd2\x95\x02\x41\x5f\xa6\x2f\x60\xe0\x72\x08\xbb\x88\xf9\x0c\xd5\x5b\x26\x1a\xed\xb0\x12\xf8\x73\x33\xb7\x85\x8a\xda\x04\x2e\x97\x2c\xe4\x04\x85\xcc\xae\x8c\x00\x9b\xbb\x15\x1d\x76\x23\xd0\x43\x05\xda\x16\xb7\x31\x13\x8f\x09\xd7\xeb\x2c\x02\xb2\xbb\x9a\x50\xeb\x01\x94\x39\x4e\x79\xc8\xb1\xee\x4a\xa7\xf0\x5e\x9f\x91\xe7\xbe\xb6\x33\x09\x7b\xbe\x6f\x16\x20\xb3\x02\x83\x77\x2f\x11\x51\x14\xf3\x1b\xf4\x25\x5e\x1a\x74\xb8\xe6\xd1\x29\x4d\x94\x90\xc9\x43\xd4\x2d\x61\xd1\x82\x9f\xbf\xcd\x58\xd9\x22\x04\x9f\x99\xfa\x57\xc1\xe5\xa6\x74\xdc\x95\x32\xed\x57\xf0\xe3\xf4\x4b\x60\x26\x66\x75\x3d\x02\xb7\x81\xba\x88\x72\xbd\xe7\x9d\x3e\x1e\x94\xe7\xa4\x99\xee\x74\xb7\xb6\xe1\xad\x4f\xdf\x6e\x1b\x99\xbd\x69\x9e\x80\x9c\xdc\x61\xc9\xec\x4a\x05\xff\xe0\xba\xbe\x4a\xcc\x9d\x4d\x02\xdb\xe9\xa8\xfe\xf2\xac\xea\x0c\x8e\x1f\xa6\xb5\x99\x57\xa5\xba\xd2\x14\x7b\x23\x94\xf9\x68\x68\x16\x87\x35\xc4\x73\x82\xfc\xcc\x19\xd6\xc8\xc7\xc3\x0c\xac\x80\xe7\x84\x58\x11\xa6\x76\xfb\x27\x2c\x4d\xd5\x90\x7f\xfd\x6d\x5f\x87\x2d\xba\xaa\xfd\x94\x06\x11\xed\xf6\xc0\x0e\x36\x98\x3d\x00\xa9\xd7\xfc\xca\x6f\x66\x6f\x0f\x0e\xb0\x8d\x94\x28\x9d\x2a\xa8\x29\x9e\xbf\xa6\xcd\xa3\x7f\x4d\x61\xc9\x70\x22\x7a\x07\x2f\xaf\xa7\x56\x3d\xa3\x1f\x18\xdd\xec\x21\x5d\x3b\x77\x73\xd9\x21\xb8\x42\x13\x10\xf0\xbb\x8f\x98\x61\xde\x41\x5b\x6d\xab\x68\x7b\xdc\x8e\x6e\x1b\x56\x7d\x9c\x9b\xc9\x6e\xa6\x7d\x7d\x5a\x2f\xbb\xc6\xae\xca\xe3\x9e\xdb\x9f\x3c\xda\x7b\x2e\xa2\x3d\x09\x60\xe8\xba\xf9\x74\x94\xa6\x52\xd3\xa4\xf5\x93\xe8\x32\xe4\xa3\x67\x54\xc8\xf7\x5e\x55\x13\x4e\xd4\x87\x2c\x2a\xbd\xd4\xb8\x33\xd9\xf3\xd0\xaf\x54\x4e\x65\xf9\x03\x81\xd3\x86\x05\xbc\x7a\x40\x30\x3c\x18\xa5\x0b\x54\x84\xa1\xf8\x31\x7d\xce\x5a\xe1\x39\xed\xbb\x17\x0e\x87\x69\x87\x93\x54\xbc\xff\xdd\xba\xba\x74\xcb\xb2\x79\x8c\x48\x6d\xb7\x7e\x6f\xa0\x97\x57\x88\x81\x2b\x4a\x57\x44\x79\x69\x99\xdd\xeb\xc9\x51\x6f\xda\xff\x2e\x30\x9b\x5d\xba\xaf\xed\xa4\xfe\xff\x43\xb2\x46\x47\x97\x9d\xa0\x8d\x00\xab\x20\xb8\x0c\xe1\x78\xe6\x25\x0c\xf7\x0b\xd1\xd1\x2b\x30\xee\x9e\xc3\xdf\xe1\xa0\xf7\x91\xe0\x08\x5b\xb7\x4c\x09\xcd\xeb\x37\x17\x4b\x0d\xdc\x15\x04\x41\x49\xec\xe6\xc3\x0a\xb6\xdd\x2f\xc2\xb2\xb1\x32\xad\x79\xd5\x66\x81\x79\x2a\x6a\xf7\x2c\x7e\xc7\xe2\x47\x42\xf5\xa8\xe2\xbd\x9a\xf4\x3e\xfd\x8d\xf5\x78\x35\x94\xba\xc7\x1b\x48\xd9\xec\x86\x5a\x48\x2c\x4f\x0b\xb0\x4f\x87\xa6\xe7\xee\x6b\x4a\xab\x27\x1f\xca\x4c\x33\x07\xbd\xea\x5e\xe6\x60\x3a\x46\x21\x79\xe4\x93\xa0\x7a\x8d\x2d\x27\xcf\xcc\x61\xa3\xef\xb2\x88\xe9\x81\x2f\x1e\xb5\x83\xcd\x7d\x7f\xec\x39\xc9\x7b\x48\x22\xf9\x8f\x79\x2e\x1a\x7d\x28\xaa\x9e\x88\x9c\x74\x77\xe1\xe8\x3e\xf1\x1d\xda\x2e\xde\x2b\xb4\x03\xcb\x50\x50\x8f\x92\xd8\x1a\xd7\xbc\x54\xe3\xf1\x56\x1a\xbf\xeb\xf6\xe5\x58\x36\x1f\x34\x73\x83\xf2\x43\x55\xf8\xe9\x78\xf9\xf3\xf7\x0e\xcc\x54\xee\x4f\x3d\x26\xbc\xc9\x05\x95\xc5\x1a\xb4\x34\xcb\x0e\x0f\x07\x42\xbf\x5c\x3a\xe2\xed\x56\x5d\xab\x8f\x71\x37\xfa\x73\x7b\xdf\x8e\xf8\xf2\xbc\xbc\xa5\xf7\x3f\x6d\x37\xd7\x8f\x3c\x60\x1b\xa6\xd6\xb8\x5f\xbd\x32\x3a\x96\x07\xf8\x79\x6c\x80\x48\xe5\xd2\x66\x6f\x37\x60\x09\x74\xae\x9f\x47\xc7\xde\xcb\xb6\x23\x1c\x6f\x3e\x5a\xf9\xec\x3d\x23\x19\xff\x27\x0a\xf7\x70\xb8\xfe\xc3\x08\x25\xdd\x66\x74\x0d\xe0\xdd\x95\xe1\xf7\xea\x30\x9e\x71\xc7\x5f\xfa\x7b\x03\xd3\xff\x9b\x4d\xf5\xef\x7f\x03\x00\x00\xff\xff\x4a\x0d\xeb\xb4\x49\x1d\x00\x00")

func templatesServerParameterGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServerParameterGotmpl,
		"templates/server/parameter.gotmpl",
	)
}

func templatesServerParameterGotmpl() (*asset, error) {
	bytes, err := templatesServerParameterGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/server/parameter.gotmpl", size: 7497, mode: os.FileMode(420), modTime: time.Unix(1433983360, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templatesStructfieldGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xaa\xae\x56\xc8\x4c\x53\xd0\x73\xc9\x4f\x0e\x2e\x29\xca\xcc\x4b\x57\xa8\xad\x05\x0a\xa1\xf3\x53\xf3\x52\x80\x0c\xae\xea\x6a\xbd\x80\xa2\xfc\x82\xd4\xa2\x92\x4a\xbf\xc4\xdc\xd4\xda\x5a\x05\xa0\x88\x4b\x62\x49\x62\x48\x65\x01\x88\x97\x90\x55\x9c\x9f\x67\xa5\x04\x32\x20\x20\xb1\x28\x31\x17\xa4\x08\xa8\x4f\x09\x6a\x49\x84\xaf\x0f\x54\x44\xa1\x22\x37\x07\xa2\x0e\x21\x06\xb7\x46\x29\x81\x0b\x10\x00\x00\xff\xff\x25\xdb\x4a\xd1\x96\x00\x00\x00")

func templatesStructfieldGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesStructfieldGotmpl,
		"templates/structfield.gotmpl",
	)
}

func templatesStructfieldGotmpl() (*asset, error) {
	bytes, err := templatesStructfieldGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/structfield.gotmpl", size: 150, mode: os.FileMode(420), modTime: time.Unix(1433981448, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templatesValidationCustomformatGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x24\x8d\xc1\x0a\xc2\x30\x10\x44\xef\xf9\x8a\xb1\x27\x0b\xa5\x1f\xa0\xf4\xa8\x27\x41\x4f\xde\x17\x4d\x74\x21\x26\xb2\xd9\x8a\x10\xf6\xdf\xb5\xe9\x6d\xe6\xf1\x86\xe1\x00\x2f\x82\xdd\x84\x0f\x45\xbe\x93\xfa\xf1\x98\xe5\x45\x7a\x0e\xdb\x5a\xc7\x0b\xe9\xd3\x6c\x40\xf7\xcf\xa7\x7c\x23\xe5\x9c\xcc\xba\x15\xac\x62\xab\x45\x85\xd3\x63\x59\x5c\x29\xce\xfe\xf0\x7d\x8b\x2f\xa5\xc9\xfd\x80\xd0\xc4\xd2\xef\xdb\xd7\x66\x42\xe2\x88\xea\x00\xf1\x3a\x4b\x5a\xa8\x33\xf7\x0b\x00\x00\xff\xff\x65\xa7\x7e\x3f\x8b\x00\x00\x00")

func templatesValidationCustomformatGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesValidationCustomformatGotmpl,
		"templates/validation/customformat.gotmpl",
	)
}

func templatesValidationCustomformatGotmpl() (*asset, error) {
	bytes, err := templatesValidationCustomformatGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/validation/customformat.gotmpl", size: 139, mode: os.FileMode(420), modTime: time.Unix(1433982633, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templatesValidationPrimitiveGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xa4\x93\x3f\x6f\xc2\x30\x10\xc5\xf7\x7c\x8a\x2b\x13\x48\x88\xa9\xea\xd0\x8a\x31\x1b\x55\x3b\x75\xc6\x82\x4b\x7b\x92\xb9\x20\xc7\x46\x91\x2c\x7f\xf7\xfa\x4f\x0d\xa8\x22\x11\x0e\x53\x72\xef\x25\xef\xfd\xe4\x93\xad\xa5\x06\x56\xef\xc4\x1b\xe4\x6f\xfd\xe3\x5c\xe5\x67\x54\x0a\x5e\xd7\x70\x12\x92\xf6\x42\xe3\xc5\x9e\x5b\xbb\xfa\x14\xe1\xb3\x25\xcc\xfc\xfb\xa6\xdd\x09\x4d\x2d\x3b\x37\x5b\x82\x9f\xbf\x84\x34\x58\xf7\x47\x85\x5d\x17\xe5\xa8\x5e\xa5\x2f\xde\x62\xf8\xd3\x1a\x98\x24\xd8\x0a\x40\xa1\x36\x8a\x83\x5a\xb9\xca\x5a\xe4\xbd\x0b\xcf\x48\x25\xfa\x51\xaa\x6c\x4f\xa4\xba\xa4\x17\x51\xf9\x26\x8d\x8a\x6f\x33\xfd\x99\x13\x88\xb6\xe9\x97\x14\xbd\x2d\x3b\x27\x62\x3a\x98\xc3\xe0\xee\x82\x39\x4a\xd4\xc8\x56\xe8\x97\xe7\xf9\x2d\xb2\x45\x5e\x61\xaa\x88\x53\xdd\xef\xa4\xe9\xe8\x84\x67\xb9\x74\xaf\x23\xbc\xc9\x7c\x94\x37\x57\xfc\xe3\xcd\x72\x19\xaf\x91\x9a\x8e\x12\x3f\x9a\x01\xe4\xb3\xff\x28\xf5\x55\x51\x11\x61\xcd\x43\xc7\x19\x9c\x69\xf7\x23\x65\xde\x89\xf1\x1b\x00\x00\xff\xff\xb0\xa9\x55\x2f\x47\x04\x00\x00")

func templatesValidationPrimitiveGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesValidationPrimitiveGotmpl,
		"templates/validation/primitive.gotmpl",
	)
}

func templatesValidationPrimitiveGotmpl() (*asset, error) {
	bytes, err := templatesValidationPrimitiveGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/validation/primitive.gotmpl", size: 1095, mode: os.FileMode(420), modTime: time.Unix(1433982575, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if (err != nil) {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/client/parameter.gotmpl": templatesClientParameterGotmpl,
	"templates/model.gotmpl": templatesModelGotmpl,
	"templates/modelvalidator.gotmpl": templatesModelvalidatorGotmpl,
	"templates/server/builder.gotmpl": templatesServerBuilderGotmpl,
	"templates/server/configureapi.gotmpl": templatesServerConfigureapiGotmpl,
	"templates/server/main.gotmpl": templatesServerMainGotmpl,
	"templates/server/operation.gotmpl": templatesServerOperationGotmpl,
	"templates/server/parameter.gotmpl": templatesServerParameterGotmpl,
	"templates/structfield.gotmpl": templatesStructfieldGotmpl,
	"templates/validation/customformat.gotmpl": templatesValidationCustomformatGotmpl,
	"templates/validation/primitive.gotmpl": templatesValidationPrimitiveGotmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"client": &bintree{nil, map[string]*bintree{
			"parameter.gotmpl": &bintree{templatesClientParameterGotmpl, map[string]*bintree{
			}},
		}},
		"model.gotmpl": &bintree{templatesModelGotmpl, map[string]*bintree{
		}},
		"modelvalidator.gotmpl": &bintree{templatesModelvalidatorGotmpl, map[string]*bintree{
		}},
		"server": &bintree{nil, map[string]*bintree{
			"builder.gotmpl": &bintree{templatesServerBuilderGotmpl, map[string]*bintree{
			}},
			"configureapi.gotmpl": &bintree{templatesServerConfigureapiGotmpl, map[string]*bintree{
			}},
			"main.gotmpl": &bintree{templatesServerMainGotmpl, map[string]*bintree{
			}},
			"operation.gotmpl": &bintree{templatesServerOperationGotmpl, map[string]*bintree{
			}},
			"parameter.gotmpl": &bintree{templatesServerParameterGotmpl, map[string]*bintree{
			}},
		}},
		"structfield.gotmpl": &bintree{templatesStructfieldGotmpl, map[string]*bintree{
		}},
		"validation": &bintree{nil, map[string]*bintree{
			"customformat.gotmpl": &bintree{templatesValidationCustomformatGotmpl, map[string]*bintree{
			}},
			"primitive.gotmpl": &bintree{templatesValidationPrimitiveGotmpl, map[string]*bintree{
			}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
        data, err := Asset(name)
        if err != nil {
                return err
        }
        info, err := AssetInfo(name)
        if err != nil {
                return err
        }
        err = os.MkdirAll(_filePath(dir, path.Dir(name)), os.FileMode(0755))
        if err != nil {
                return err
        }
        err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
        if err != nil {
                return err
        }
        err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
        if err != nil {
                return err
        }
        return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
        children, err := AssetDir(name)
        // File
        if err != nil {
                return RestoreAsset(dir, name)
        }
        // Dir
        for _, child := range children {
                err = RestoreAssets(dir, path.Join(name, child))
                if err != nil {
                        return err
                }
        }
        return nil
}

func _filePath(dir, name string) string {
        cannonicalName := strings.Replace(name, "\\", "/", -1)
        return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

