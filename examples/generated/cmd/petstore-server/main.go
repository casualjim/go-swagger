package main

import (
  "log"
  "os"
  "net/http"

  spec "github.com/go-swagger/go-swagger/spec"
	flags "github.com/jessevdk/go-flags"
	graceful "github.com/tylerb/graceful"

  "github.com/go-swagger/go-swagger/examples/generated/models"
  "github.com/go-swagger/go-swagger/examples/generated/restapi/operations/pet"
  "github.com/go-swagger/go-swagger/examples/generated/restapi/operations/user"
  "github.com/go-swagger/go-swagger/examples/generated/restapi/operations/store"
  "github.com/go-swagger/go-swagger/examples/generated/restapi/operations/pet"
  "github.com/go-swagger/go-swagger/examples/generated/restapi/operations/user"
  "github.com/go-swagger/go-swagger/examples/generated/restapi/operations/store"
  "github.com/go-swagger/go-swagger/examples/generated/restapi"
  "github.com/go-swagger/go-swagger/examples/generated/restapi/operations"
  
  
)

// This file was generated by the swagger tool.
// Make sure not to overwrite this file after you generated it because all your edits would be lost!

func main() { 
  swaggerSpec, err := spec.New(restapi.SwaggerJSON, "")
  if err != nil {
    log.Fatalln(err)
  }

  api := operations.NewPetstoreAPI(swaggerSpec)
	server := restapi.NewServer(api)
  defer api.ServerShutdown()

  parser := flags.NewParser(server, flags.Default)
  parser.ShortDescription = `Swagger Petstore`
  parser.LongDescription = `This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.`

  for _, optsGroup := range api.CommandLineOptionsGroups {
    parser.AddGroup(optsGroup.ShortDescription, optsGroup.LongDescription, optsGroup.Options)
  }
  
	if _, err := parser.Parse(); err != nil {
		log.Fatalln(err)
	}
  
  if err := server.Serve(); err != nil {
    log.Fatalln(err)
  }
}
